{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceBehavior = exports.preKeyupBehavior = exports.preKeydownBehavior = exports.postKeyupBehavior = exports.keyupBehavior = exports.keypressBehavior = exports.keydownBehavior = void 0;\nvar _utils = require(\"../../utils\");\nvar arrowKeys = _interopRequireWildcard(require(\"./arrow\"));\nvar controlKeys = _interopRequireWildcard(require(\"./control\"));\nvar characterKeys = _interopRequireWildcard(require(\"./character\"));\nvar functionalKeys = _interopRequireWildcard(require(\"./functional\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nconst replaceBehavior = [{\n  matches: (keyDef, element) => keyDef.key === 'selectall' && (0, _utils.isElementType)(element, ['input', 'textarea']),\n  handle: (keyDef, element, options, state) => {\n    var _state$carryValue;\n    (0, _utils.setSelectionRange)(element, 0, ((_state$carryValue = state.carryValue) != null ? _state$carryValue : element.value).length);\n  }\n}];\nexports.replaceBehavior = replaceBehavior;\nconst preKeydownBehavior = [...functionalKeys.preKeydownBehavior];\nexports.preKeydownBehavior = preKeydownBehavior;\nconst keydownBehavior = [...arrowKeys.keydownBehavior, ...controlKeys.keydownBehavior, ...functionalKeys.keydownBehavior];\nexports.keydownBehavior = keydownBehavior;\nconst keypressBehavior = [...functionalKeys.keypressBehavior, ...characterKeys.keypressBehavior];\nexports.keypressBehavior = keypressBehavior;\nconst preKeyupBehavior = [...functionalKeys.preKeyupBehavior];\nexports.preKeyupBehavior = preKeyupBehavior;\nconst keyupBehavior = [...functionalKeys.keyupBehavior];\nexports.keyupBehavior = keyupBehavior;\nconst postKeyupBehavior = [...functionalKeys.postKeyupBehavior];\nexports.postKeyupBehavior = postKeyupBehavior;","map":null,"metadata":{},"sourceType":"script"}