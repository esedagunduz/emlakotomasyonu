{"ast":null,"code":"var _jsxFileName = \"/Users/ebrarsedagunduz/emlak/src/PropertyList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { List, Card, message } from 'antd';\nimport * as XLSX from 'xlsx';\nconst PropertyList = ({\n  properties\n}) => {\n  const [excelData, setExcelData] = useState([]);\n  useEffect(() => {\n    const readExcelData = file => {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const data = e.target.result;\n        const workbook = XLSX.read(data, {\n          type: 'binary'\n        });\n        const firstSheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(firstSheet);\n        setExcelData(jsonData);\n      };\n      reader.onerror = error => {\n        console.error('Excel verileri okunurken hata oluştu:', error);\n        message.error('Excel verileri okunurken bir hata oluştu');\n      };\n      reader.readAsBinaryString(file);\n    };\n    if (properties.length > 0) {\n      // Eğer properties array'inde yeni veri varsa\n      const file = new Blob([new Uint8Array(properties)], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      readExcelData(file);\n    }\n  }, [properties]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: 800,\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Emlak Listesi\"), /*#__PURE__*/React.createElement(List, {\n    grid: {\n      gutter: 16,\n      column: 1\n    },\n    dataSource: excelData,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: item.ilanbaslik,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, \"A\\xE7\\u0131klama: \", item.ilanaciklama), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, \"Fiyat: \", item.fiyat), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, \"\\u0130l: \", item.il), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"\\u0130l\\xE7e: \", item.ilce), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"Kategori: \", item.kategori), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, \"T\\xFCr: \", item.tur))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\nexport default PropertyList;","map":{"version":3,"names":["React","useState","useEffect","List","Card","message","XLSX","PropertyList","properties","excelData","setExcelData","readExcelData","file","reader","FileReader","onload","e","data","target","result","workbook","read","type","firstSheet","Sheets","SheetNames","jsonData","utils","sheet_to_json","onerror","error","console","readAsBinaryString","length","Blob","Uint8Array","createElement","style","maxWidth","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","grid","gutter","column","dataSource","renderItem","item","Item","title","ilanbaslik","ilanaciklama","fiyat","il","ilce","kategori","tur"],"sources":["/Users/ebrarsedagunduz/emlak/src/PropertyList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { List, Card, message } from 'antd';\nimport * as XLSX from 'xlsx';\n\nconst PropertyList = ({ properties }) => {\n  const [excelData, setExcelData] = useState([]);\n\n  useEffect(() => {\n    const readExcelData = (file) => {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const data = e.target.result;\n        const workbook = XLSX.read(data, { type: 'binary' });\n        const firstSheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(firstSheet);\n        setExcelData(jsonData);\n      };\n      reader.onerror = (error) => {\n        console.error('Excel verileri okunurken hata oluştu:', error);\n        message.error('Excel verileri okunurken bir hata oluştu');\n      };\n      reader.readAsBinaryString(file);\n    };\n\n    if (properties.length > 0) {\n      // Eğer properties array'inde yeni veri varsa\n      const file = new Blob([new Uint8Array(properties)], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n      readExcelData(file);\n    }\n  }, [properties]);\n\n  return (\n    <div style={{ maxWidth: 800, margin: 'auto' }}>\n      <h1>Emlak Listesi</h1>\n      <List\n        grid={{ gutter: 16, column: 1 }}\n        dataSource={excelData}\n        renderItem={item => (\n          <List.Item>\n            <Card title={item.ilanbaslik}>\n              <p>Açıklama: {item.ilanaciklama}</p>\n              <p>Fiyat: {item.fiyat}</p>\n              <p>İl: {item.il}</p>\n              <p>İlçe: {item.ilce}</p>\n              <p>Kategori: {item.kategori}</p>\n              <p>Tür: {item.tur}</p>\n            </Card>\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default PropertyList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}