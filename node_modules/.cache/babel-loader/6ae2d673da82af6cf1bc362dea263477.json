{"ast":null,"code":"var _jsxFileName = \"/Users/ebrarsedagunduz/emlak/src/PropertyList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { List, Card, message, Upload, Button } from 'antd';\nimport * as XLSX from 'xlsx';\nconst PropertyList = ({\n  properties\n}) => {\n  const [excelData, setExcelData] = useState([]);\n  const readExcelFile = async file => {\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = e.target.result;\n      const workbook = XLSX.read(data, {\n        type: 'binary'\n      });\n      const firstSheet = workbook.Sheets[workbook.SheetNames[0]];\n      const jsonData = XLSX.utils.sheet_to_json(firstSheet);\n      setExcelData(jsonData);\n    };\n    reader.readAsBinaryString(file);\n  };\n  const handleFileUpload = ({\n    file\n  }) => {\n    readExcelFile(file);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: 800,\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Emlak Listesi\"), /*#__PURE__*/React.createElement(Upload, {\n    beforeUpload: () => false,\n    onChange: handleFileUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Excel Dosyas\\u0131 Y\\xFCkle\")), /*#__PURE__*/React.createElement(List, {\n    grid: {\n      gutter: 16,\n      column: 1\n    },\n    dataSource: excelData,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: item.ilanbaslik,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, \"A\\xE7\\u0131klama: \", item.ilanaciklama), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, \"Fiyat: \", item.fiyat), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, \"\\u0130l: \", item.il), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, \"\\u0130l\\xE7e: \", item.ilce), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, \"Kategori: \", item.kategori), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, \"T\\xFCr: \", item.tur))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\nexport default PropertyList;","map":{"version":3,"names":["React","useState","useEffect","List","Card","message","Upload","Button","XLSX","PropertyList","properties","excelData","setExcelData","readExcelFile","file","reader","FileReader","onload","e","data","target","result","workbook","read","type","firstSheet","Sheets","SheetNames","jsonData","utils","sheet_to_json","readAsBinaryString","handleFileUpload","createElement","style","maxWidth","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","beforeUpload","onChange","grid","gutter","column","dataSource","renderItem","item","Item","title","ilanbaslik","ilanaciklama","fiyat","il","ilce","kategori","tur"],"sources":["/Users/ebrarsedagunduz/emlak/src/PropertyList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { List, Card, message, Upload, Button } from 'antd';\nimport * as XLSX from 'xlsx';\n\nconst PropertyList = ({ properties }) => {\n  const [excelData, setExcelData] = useState([]);\n\n  const readExcelFile = async (file) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = e.target.result;\n      const workbook = XLSX.read(data, { type: 'binary' });\n      const firstSheet = workbook.Sheets[workbook.SheetNames[0]];\n      const jsonData = XLSX.utils.sheet_to_json(firstSheet);\n      setExcelData(jsonData);\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  const handleFileUpload = ({ file }) => {\n    readExcelFile(file);\n  };\n\n  return (\n    <div style={{ maxWidth: 800, margin: 'auto' }}>\n      <h1>Emlak Listesi</h1>\n      <Upload beforeUpload={() => false} onChange={handleFileUpload}>\n        <Button>Excel Dosyası Yükle</Button>\n      </Upload>\n      <List\n        grid={{ gutter: 16, column: 1 }}\n        dataSource={excelData}\n        renderItem={item => (\n          <List.Item>\n            <Card title={item.ilanbaslik}>\n              <p>Açıklama: {item.ilanaciklama}</p>\n              <p>Fiyat: {item.fiyat}</p>\n              <p>İl: {item.il}</p>\n              <p>İlçe: {item.ilce}</p>\n              <p>Kategori: {item.kategori}</p>\n              <p>Tür: {item.tur}</p>\n            </Card>\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default PropertyList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}